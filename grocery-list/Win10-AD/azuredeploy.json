{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspaceName": {
            "type": "string",
            "defaultValue": "MSSen2Go",
            "metadata": {
                "description": "Name for the Log Analytics workspace used to aggregate data. If this is a new LA workspace, the template will add a unique string to the name you choose. If you are using an existing LA workspace, the name will not change and will be passed as is to the resources in the template."
            }
        },
        "workspaceId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Your own existing log analytics workspace ID. Leave it empty if you are deploying a new LA workspace."
            }
        },
        "workspaceKey": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Your own existing log analytics workspace key. Leave it empty if you are deploying a new LA workspace."
            }
        },
        "pricingTier": {
            "type": "string",
            "allowedValues": [
                "PerGB2018",
                "Free",
                "Standalone",
                "PerNode",
                "Standard",
                "Premium"
            ],
            "defaultValue": "PerGB2018",
            "metadata": {
                "description": "Pricing tier: pergb2018 or legacy tiers (Free, Standalone, PerNode, Standard or Premium) which are not available to all customers."
            }
        },
        "dataRetention": {
            "type": "int",
            "defaultValue": 30,
            "minValue": 7,
            "maxValue": 730,
            "metadata": {
                "description": "Number of days of retention. Workspaces in the legacy Free pricing tier can only have 7 days."
            }
        },
        "immediatePurgeDataOn30Days": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "If set to true when changing retention to 30 days, older data will be immediately deleted. Use this with extreme caution. This only applies when retention is being set to 30 days."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Admin username for all virtual machines."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the all Virtual machines. The password must be at least 8 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter"
            },
            "minLength": 8
        },
        "remoteAccessMode": {
            "type": "string",
            "defaultValue": "AllowPublicIP",
            "allowedValues": [
                "AllowPublicIP",
                "AzureBastionHost"
            ],
            "metadata": {
                "description": "Do you want to restrict access to your environment by a Public IP or set up an Azure Bastion Host. If the former, make sure you add your public IP address to the variable 'allowedIPAddresses'"
            }
        },
        "allowedIPAddresses": {
            "type": "string",
            "metadata": {
                "description": "The sourceAddressPrefixes allowed to connect to this deployment"
            }
        },
        "numberOfWorkstations": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1,
            "maxValue": 10,
            "metadata": {
                "description": "Number of Windows 10 virtual machines to deploy"
            }
        },
        "vmNamePrefix": {
            "type": "string",
            "defaultValue": "WORKSTATION",
            "metadata": {
                "description": "Prefix for the name of your virtual machine. Template will add a number starting from 5."
            }
        },
        "windowsDesktopSKU": {
            "type": "string",
            "defaultValue": "19h2-pro",
            "allowedValues": [
                "19h1-pro",
                "19h2-pro",
                "rs4-pro",
                "rs5-pro"
            ],
            "metadata": {
                "description": "The Sku for the Desktop VM."
            }
        },
        "windowsServerSKU": {
            "type": "string",
            "defaultValue": "2019-Datacenter",
            "allowedValues": [
                "2019-Datacenter"
            ],
            "metadata": {
                "description": "The Sku for the Server VM."
            }
        },
        "windowsServerVersion": {
            "type": "string",
            "defaultValue": "latest",
            "allowedValues": [
                "17763.1282.2006061952",
                "17763.1339.2007101755",
                "17763.1397.2008070242",
                "17763.1457.2009030514",
                "17763.1518.2010132039",
                "17763.1577.2011031610",
                "17763.1579.2011180054",
                "17763.1637.2012040632",
                "17763.1697.2101090203",
                "17763.1757.2102060435",
                "17763.1817.2103030313",
                "17763.1879.2104091832",
                "17763.1935.2105080716",
                "17763.1999.2106060321",
                "latest"
            ],
            "metadata": {
                "description": "The specific version for the Server VM."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B2s",
            "allowedValues": [
                "Standard_A2",
                "Standard_A3",
                "Standard_B2s",
                "Standard_B2ms",
                "Standard_A2_v2",
                "Standard_A4_v2"
            ],
            "metadata": {
                "description": "Size of the virtual machine. Reference: https://docs.microsoft.com/en-us/azure/virtual-machines/sizes-general"
            }
        },
        "domainFQDN": {
            "type": "string",
            "metadata": {
                "description": "The FQDN of the Active Directory Domain to be created"
            },
            "defaultValue": "mssentinel.local"
        },
        "collectWinEventProviders": {
            "type": "array",
            "metadata": {
                "description": "Do you want to configure your Log Analytics Workspace to collect Windows Event Logs from several pre-defined event providers?. Windows Security Auditing is not enabled through this option. It is enabled through the Data Connectors parameter."
            },
            "defaultValue": [
                "System",
                "Microsoft-Windows-Sysmon/Operational",
                "Microsoft-Windows-TerminalServices-RemoteConnectionManager/Operational",
                "Microsoft-Windows-Bits-Client/Operational",
                "Microsoft-Windows-TerminalServices-LocalSessionManager/Operational",
                "Directory Service",
                "Microsoft-Windows-DNS-Client/Operational",
                "Microsoft-Windows-Windows Firewall With Advanced Security/Firewall",
                "Windows PowerShell",
                "Microsoft-Windows-PowerShell/Operational",
                "Microsoft-Windows-WMI-Activity/Operational",
                "Microsoft-Windows-TaskScheduler/Operational"
            ]
        },
        "c2Framework": {
            "type": "string",
            "defaultValue": "None",
            "allowedValues": [
                "None",
                "empire",
                "covenant",
                "metasploit"
            ],
            "metadata": {
                "description": "C2 framework to deploy"
            }
        },
        "ubuntuSKU": {
            "type": "string",
            "defaultValue": "18.04-LTS",
            "allowedValues": [
                "18.04-LTS",
                "19.04"
            ],
            "metadata": {
                "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
            }
        },
        "enableSysmon": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Do you want to install Sysmon on the endpoint?"
            }
        },
        "enableAADConnect": {
            "type": "bool",
            "metadata": {
                "description": "Do you want to want download the AADConnect installer and get it ready to set up after the deployment?"
            },
            "defaultValue": false
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "variables": {
        "artifactsBlacksmith": "https://raw.githubusercontent.com/OTRF/Blacksmith/master/",
        "artifactsMicrosoftSentinel2Go": "https://raw.githubusercontent.com/OTRF/Microsoft-Sentinel2Go/master/",
        "sysmonWindowsParserPackTemplate": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Parsers/ASim%20Sysmon%20for%20Windows/SysmonFullDeployment.json",
        "dataCollectionRuleName": "WindowsDCR"
    },
    "resources": [
        {
            "condition": "[and(empty(parameters('workspaceId')),empty(parameters('workspaceKey')))]",
            "name": "deployMSSentinel2Go",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('artifactsMicrosoftSentinel2Go'),'microsoft-sentinel/azuredeploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "workspaceName": {
                        "value": "[parameters('workspaceName')]"
                    },
                    "pricingTier": {
                        "value": "[parameters('pricingTier')]"
                    },
                    "dataRetention": {
                        "value": "[parameters('dataRetention')]"
                    },
                    "immediatePurgeDataOn30Days": {
                        "value": "[parameters('immediatePurgeDataOn30Days')]"
                    }
                }
            }
        },
        {
            "type": "microsoft.insights/dataCollectionRules",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "deployMSSentinel2Go"
            ],
            "name": "[variables('dataCollectionRuleName')]",
            "location": "[parameters('location')]",
            "tags": {
                "createdBy": "Sentinel"
            },
            "properties": {
                "dataSources": {
                    "windowsEventLogs": [
                        {
                            "name": "eventLogsDataSource",
                            "scheduledTransferPeriod": "PT5M",
                            "streams": [
                                "Microsoft-SecurityEvent"
                            ],
                            "xPathQueries": [
                                "Security!*[System[(EventID=5136 or EventID=5139)]]",
                                "Security!*[System[(EventID=5137)]]",
                                "Security!*[System[(EventID=5141)]]",
                                "Security!*[System[(EventID=4662 or EventID=4661)]]",
                                "Security!*[System[(EventID=4768 or EventID=4769)]]",
                                "Security!*[System[(EventID=4688)]]",
                                "Security!*[System[(EventID=4660)]]",
                                "Security!(*[System[EventID=4656]] and ((*[EventData[Data[@Name='ObjectType']='File']]))) or (*[System[EventID=4663]] and ((*[EventData[Data[@Name='ObjectType']='File']]))) or (*[System[EventID=4661]] and ((*[EventData[Data[@Name='ObjectType']='SAM']])))",
                                "Security!*[System[(EventID=4670)]]",
                                "Security!*[System[(EventID=4624 or EventID=4778 or EventID=4964)]]",
                                "Security!*[System[(EventID=5140 or EventID=5145)]]",
                                "Security!*[System[(EventID=5154 or EventID=5159 or EventID=5155 or EventID=5158 or EventID=5156 or EventID=5157 or EventID=5031)]]",
                                "Security!(*[System[EventID=4656]] and ((*[EventData[Data[@Name='ObjectType']='Process']]))) or (*[System[EventID=4663]] and ((*[EventData[Data[@Name='ObjectType']='Process']])))",
                                "Security!*[System[(EventID=4689)]]",
                                "Security!*[System[(EventID=4698)]]",
                                "Security!*[System[(EventID=4701 or EventID=4700 or EventID=4702)]]",
                                "Security!*[System[(EventID=4697)]]",
                                "Security!*[System[(EventID=4725 or EventID=4722 or EventID=4717 or EventID=4740 or EventID=4738 or EventID=4781 or EventID=4767 or EventID=4718)]]",
                                "Security!*[System[(EventID=4624 or EventID=4625 or EventID=4648)]]",
                                "Security!*[System[(EventID=4726)]]",
                                "Security!*[System[(EventID=4720)]]",
                                "Security!*[System[(EventID=4670 or EventID=4657)]]",
                                "Security!(*[System[EventID=4656]] and ((*[EventData[Data[@Name='ObjectType']='Key']]))) or (*[System[EventID=4663]] and ((*[EventData[Data[@Name='ObjectType']='Key']])))"
                            ]
                        }
                    ]
                },
                "destinations": {
                    "logAnalytics": [
                        {
                            "name": "WindowsEvents",
                            "workspaceId": "[if(empty(parameters('workspaceId')), reference('deployMSSentinel2Go').outputs.workspaceIdOutput.value, parameters('workspaceId'))]",
                            "workspaceResourceId": "[if(empty(parameters('workspaceId')), reference('deployMSSentinel2Go').outputs.workspaceResourceIdOutput.value, parameters('workspaceId'))]"
                        }
                    ]
                },
                "dataFlows": [
                    {
                        "streams": [
                            "Microsoft-SecurityEvent"
                        ],
                        "destinations": [
                            "WindowsEvents"
                        ]
                    }
                ]
            }
        },
        {
            "condition": "[not(empty(parameters('collectWinEventProviders')))]",
            "name": "collectWinDataSources",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "deployMSSentinel2Go"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('artifactsMicrosoftSentinel2Go'),'microsoft-sentinel/linkedtemplates/log-analytics/winDataSources.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "workspaceName": {
                        "value": "[if(empty(parameters('workspaceId')), reference('deployMSSentinel2Go').outputs.workspaceName.value, parameters('workspaceName'))]"
                    },
                    "winEventProviders": {
                        "value": "[parameters('collectWinEventProviders')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "condition": "[parameters('enableSysmon')]",
            "name": "deploySysmonWindowsParserPack",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "deployMSSentinel2Go"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('sysmonWindowsParserPackTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "workspaceName": {
                        "value": "[if(empty(parameters('workspaceId')), reference('deployMSSentinel2Go').outputs.workspaceName.value, parameters('workspaceName'))]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "name": "deployWinAD",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "deployMSSentinel2Go"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('artifactsBlacksmith'), 'templates/azure/Win10-AD/azuredeploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "numberOfWorkstations": {
                        "value": "[parameters('numberOfWorkstations')]"
                    },
                    "vmNamePrefix": {
                        "value": "[parameters('vmNamePrefix')]"
                    },
                    "windowsDesktopSKU": {
                        "value": "[parameters('windowsDesktopSKU')]"
                    },
                    "windowsServerSKU": {
                        "value": "[parameters('windowsServerSKU')]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "windowsServerVersion": {
                        "value": "[parameters('windowsServerVersion')]"
                    },
                    "domainFQDN": {
                        "value": "[parameters('domainFQDN')]"
                    },
                    "identityType": {
                        "value": "SystemAssigned"
                    },
                    "remoteAccessMode": {
                        "value": "[parameters('remoteAccessMode')]"
                    },
                    "allowedIPAddresses": {
                        "value": "[parameters('allowedIPAddresses')]"
                    },
                    "enableSysmon": {
                        "value": "[parameters('enableSysmon')]"
                    },
                    "enableAADConnect": {
                        "value": "[parameters('enableAADConnect')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "name": "installAzureMonitorAgent",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "deployMSSentinel2Go",
                "deployWinAD"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('artifactsBlacksmith'), 'templates/azure/Azure-Monitor-Agents/windows.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualMachines": {
                        "value": "[reference('deployWinAD').outputs.allWinVMsDeployed.value]"
                    },
                    "monitorAgent": {
                        "value": "Azure Monitor Agent"
                    }
                }
            }
        },
        {
            "name": "associateWindowsDCR",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('microsoft.insights/dataCollectionRules', variables('dataCollectionRuleName'))]",
                "installAzureMonitorAgent"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('artifactsMicrosoftSentinel2Go'), 'microsoft-sentinel/linkedtemplates/data-collection-rules/association.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualMachines": {
                        "value": "[reference('deployWinAD').outputs.allWinVMsDeployed.value]"
                    },
                    "dataCollectionRuleId": {
                        "value": "[resourceId('microsoft.insights/dataCollectionRules', variables('dataCollectionRuleName'))]"
                    },
                    "dataCollectionRuleName": {
                        "value": "[variables('dataCollectionRuleName')]"
                    }
                }
            }
        },
        {
            "condition": "[not(equals(parameters('c2Framework'), 'None'))]",
            "name": "deployC2",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('artifactsBlacksmith'), 'templates/azure/C2/azuredeploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "authenticationType": {
                        "value": "password"
                    },
                    "adminPasswordOrKey": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "vmName": {
                        "value": "C2001"
                    },
                    "ubuntuSKU": {
                        "value": "[parameters('ubuntuSKU')]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "allowedIPAddresses": {
                        "value": "[parameters('allowedIPAddresses')]"
                    },
                    "c2Framework": {
                        "value": "[parameters('c2Framework')]"
                    }
                }
            }
        },
        {
            "condition": "[not(equals(parameters('c2Framework'), 'None'))]",
            "name": "vnet-c2/peering-to-remote-vnet-win",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-11-01",
            "dependsOn": [
                "deployC2",
                "deployWinAD"
            ],
            "location": "[parameters('location')]",
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[reference('deployWinAD').outputs.virtualNetworkId.value]"
                }
            }
        },
        {
            "condition": "[not(equals(parameters('c2Framework'), 'None'))]",
            "name": "vnet-win/peering-to-remote-vnet-c2",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-11-01",
            "dependsOn": [
                "deployC2",
                "deployWinAD"
            ],
            "location": "[parameters('location')]",
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[if(not(equals(parameters('c2Framework'), 'None')), reference('deployC2').outputs.virtualNetworkId.value, 'Resource not deployed')]"
                }
            }
        }
    ],
    "outputs": {}
}
