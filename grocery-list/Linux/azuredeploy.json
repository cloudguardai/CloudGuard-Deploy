{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "utcValue": {
            "type": "string",
            "metadata": {
                "description": "Returns the current (UTC) datetime value in the specified format. If no format is provided, the ISO 8601 (yyyyMMddTHHmmssZ) format is used"
            },
            "defaultValue": "[utcNow()]"
        },
        "workspaceName": {
            "type": "string",
            "defaultValue": "MSSen2Go",
            "metadata": {
                "description": "Name for the Log Analytics workspace used to aggregate data. If this is a new LA workspace, the template will add a unique string to the name you choose. If you are using an existing LA workspace, the name will not change and will be passed as is to the resources in the template."
            }
        },
        "workspaceId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Your own existing log analytics workspace ID. Leave it empty if you are deploying a new LA workspace."
            }
        },
        "workspaceKey": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Your own existing log analytics workspace key. Leave it empty if you are deploying a new LA workspace."
            }
        },
        "pricingTier": {
            "type": "string",
            "allowedValues": [
                "PerGB2018",
                "Free",
                "Standalone",
                "PerNode",
                "Standard",
                "Premium"
            ],
            "defaultValue": "PerGB2018",
            "metadata": {
                "description": "Pricing tier: pergb2018 or legacy tiers (Free, Standalone, PerNode, Standard or Premium) which are not available to all customers."
            }
        },
        "dataRetention": {
            "type": "int",
            "defaultValue": 30,
            "minValue": 7,
            "maxValue": 730,
            "metadata": {
                "description": "Number of days of retention. Workspaces in the legacy Free pricing tier can only have 7 days."
            }
        },
        "immediatePurgeDataOn30Days": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "If set to true when changing retention to 30 days, older data will be immediately deleted. Use this with extreme caution. This only applies when retention is being set to 30 days."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Admin username for all virtual machines."
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
            }
        },
        "adminPasswordOrKey": {
            "type": "securestring",
            "metadata": {
                "description": "SSH Key or password for the Virtual Machine. SSH key is recommended. The password must be at least 8 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        },
        "remoteAccessMode": {
            "type": "string",
            "defaultValue": "AllowPublicIP",
            "allowedValues": [
                "AllowPublicIP",
                "AzureBastionHost"
            ],
            "metadata": {
                "description": "Do you want to restrict access to your environment by a Public IP or set up an Azure Bastion Host. If the former, make sure you add your public IP address to the variable 'allowedIPAddresses'"
            }
        },
        "allowedIPAddresses": {
            "type": "string",
            "metadata": {
                "description": "The sourceAddressPrefixes allowed to connect to this deployment"
            },
            "defaultValue": "*"
        },
        "azureBastionSubnetRange": {
            "type": "string",
            "metadata": {
                "description": "Address Range of the Azure Bastion service"
            },
            "defaultValue": "192.168.3.0/27"
        },
        "numberOfUbuntuVMs": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 0,
            "maxValue": 5,
            "metadata": {
                "description": "Number of VMs to deploy"
            }
        },
        "ubuntuSKU": {
            "type": "string",
            "defaultValue": "18.04-LTS",
            "allowedValues": [
                "18.04-LTS",
                "19.04"
            ],
            "metadata": {
                "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
            }
        },
        "numberOfCentOSVMs": {
            "type": "int",
            "defaultValue": 0,
            "minValue": 0,
            "maxValue": 5,
            "metadata": {
                "description": "Number of VMs to deploy"
            }
        },
        "centOSSKU": {
            "type": "string",
            "defaultValue": "8.0",
            "allowedValues": [
                "7.6",
                "7.7",
                "8.0",
                "8_1",
                "8_2",
                "8_3",
                "8_4"
            ],
            "metadata": {
                "description": "The CentOS version for the VM. This will pick a fully patched image of this given Centos version."
            }
        },
        "numberOfRedHatVMs": {
            "type": "int",
            "defaultValue": 0,
            "minValue": 0,
            "maxValue": 5,
            "metadata": {
                "description": "Number of VMs to deploy"
            }
        },
        "redhatSKU": {
            "type": "string",
            "defaultValue": "8",
            "allowedValues": [
                "7.7",
                "8",
                "8.1",
                "8.2"
            ],
            "metadata": {
                "description": "The Red Hat version for the VM. This will pick a fully patched image of this given Red Hat version."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B2s",
            "allowedValues": [
                "Standard_A2",
                "Standard_A3",
                "Standard_B2s",
                "Standard_B2ms",
                "Standard_B4ms",
                "Standard_A2_v2",
                "Standard_A4_v2"
            ],
            "metadata": {
                "description": "Size of the virtual machine. Reference: https://docs.microsoft.com/en-us/azure/virtual-machines/sizes-general"
            }
        },
        "collectSyslogFacilities": {
            "type": "array",
            "metadata": {
                "description": "Do you want to configure your Log Analytics Workspace to collect Syslog from specific facilities. Example: [ \"kern\", \"user\", \"daemon\", \"auth\", \"syslog\" ]"
            },
            "defaultValue": [
                "auth",
                "authpriv",
                "cron",
                "daemon",
                "ftp",
                "kern",
                "user"
            ]
        },
        "installOMSAuditdPlugin": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Do you want to enable an Auditd plugin that forwards audit events to OMS Agent for Linux. https://github.com/microsoft/OMS-Auditd-Plugin"
            }
        },
        "c2Framework": {
            "type": "string",
            "defaultValue": "None",
            "allowedValues": [
                "None",
                "empire",
                "covenant",
                "caldera",
                "metasploit",
                "shad0w"
            ],
            "metadata": {
                "description": "C2 framework to deploy"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "variables": {
        "artifactsBlacksmith": "https://raw.githubusercontent.com/OTRF/Blacksmith/master/",
        "artifactsMicrosoftSentinel2Go": "https://raw.githubusercontent.com/OTRF/Microsoft-Sentinel2Go/master/"
    },
    "resources": [
        {
            "condition": "[and(empty(parameters('workspaceId')),empty(parameters('workspaceKey')))]",
            "name": "deployMSSentinel2Go",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('artifactsMicrosoftSentinel2Go'),'microsoft-sentinel/azuredeploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "utcValue": {
                        "value": "[parameters('utcValue')]"
                    },
                    "workspaceName": {
                        "value": "[parameters('workspaceName')]"
                    },
                    "pricingTier": {
                        "value": "[parameters('pricingTier')]"
                    },
                    "dataRetention": {
                        "value": "[parameters('dataRetention')]"
                    },
                    "immediatePurgeDataOn30Days": {
                        "value": "[parameters('immediatePurgeDataOn30Days')]"
                    }
                }
            }
        },
        {
            "name": "enableLinuxSyslogCollection",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "deployMSSentinel2Go"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('artifactsMicrosoftSentinel2Go'), 'microsoft-sentinel/linkedtemplates/data-connectors/syslogCollection.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "workspaceName": {
                        "value": "[reference('deployMSSentinel2Go', '2020-06-01').outputs.workspaceName.value]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "condition": "[not(empty(parameters('collectSyslogFacilities')))]",
            "name": "collectSyslogDataSources",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "dependsOn": [
                "deployMSSentinel2Go"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('artifactsMicrosoftSentinel2Go'),'microsoft-sentinel/linkedtemplates/log-analytics/syslogDataSources.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "workspaceName": {
                        "value": "[reference('deployMSSentinel2Go', '2020-06-01').outputs.workspaceName.value]"
                    },
                    "syslogFacilities": {
                        "value": "[parameters('collectSyslogFacilities')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "name": "deployLinuxVM",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "deployMSSentinel2Go"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('artifactsBlacksmith'), 'templates/azure/Linux/azuredeploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "authenticationType": {
                        "value": "[parameters('authenticationType')]"
                    },
                    "adminPasswordOrKey": {
                        "value": "[parameters('adminPasswordOrKey')]"
                    },
                    "numberOfUbuntuVMs": {
                        "value": "[parameters('numberOfUbuntuVMs')]"
                    },
                    "ubuntuSKU": {
                        "value": "[parameters('ubuntuSKU')]"
                    },
                    "numberOfCentOSVMs": {
                        "value": "[parameters('numberOfCentOSVMs')]"
                    },
                    "centOSSKU": {
                        "value": "[parameters('centOSSKU')]"
                    },
                    "numberOfRedHatVMs": {
                        "value": "[parameters('numberOfRedHatVMs')]"
                    },
                    "redhatSKU": {
                        "value": "[parameters('redhatSKU')]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "remoteAccessMode": {
                        "value": "[parameters('remoteAccessMode')]"
                    },
                    "allowedIPAddresses": {
                        "value": "[parameters('allowedIPAddresses')]"
                    },
                    "azureBastionSubnetRange": {
                        "value": "[parameters('azureBastionSubnetRange')]"
                    },
                    "workspaceId": {
                        "value": "[if(empty(parameters('workspaceId')), reference('deployMSSentinel2Go').outputs.workspaceIdOutput.value, parameters('workspaceId'))]"
                    },
                    "workspaceKey": {
                        "value": "[if(empty(parameters('workspaceKey')), reference('deployMSSentinel2Go').outputs.workspaceKeyOutput.value, parameters('workspaceKey'))]"
                    },
                    "installOMSAgent": {
                        "value": true
                    },
                    "installOMSAuditdPlugin": {
                        "value": "[parameters('installOMSAuditdPlugin')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "condition": "[not(equals(parameters('c2Framework'), 'None'))]",
            "name": "deployC2",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('artifactsBlacksmith'), 'templates/azure/C2/azuredeploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "authenticationType": {
                        "value": "password"
                    },
                    "adminPasswordOrKey": {
                        "value": "[parameters('adminPasswordOrKey')]"
                    },
                    "vmName": {
                        "value": "C2001"
                    },
                    "ubuntuSKU": {
                        "value": "[parameters('ubuntuSKU')]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "remoteAccessMode": {
                        "value": "[parameters('remoteAccessMode')]"
                    },
                    "allowedIPAddresses": {
                        "value": "[parameters('allowedIPAddresses')]"
                    },
                    "c2Framework": {
                        "value": "[parameters('c2Framework')]"
                    }
                }
            }
        },
        {
            "condition": "[not(equals(parameters('c2Framework'), 'None'))]",
            "name": "vnet-c2/peering-to-remote-vnet-linux",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-11-01",
            "dependsOn": [
                "deployC2",
                "deployLinuxVM"
            ],
            "location": "[parameters('location')]",
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[reference('deployLinuxVM').outputs.virtualNetworkId.value]"
                }
            }
        },
        {
            "condition": "[not(equals(parameters('c2Framework'), 'None'))]",
            "name": "vnet-linux/peering-to-remote-vnet-c2",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-11-01",
            "dependsOn": [
                "deployC2",
                "deployLinuxVM"
            ],
            "location": "[parameters('location')]",
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[if(not(equals(parameters('c2Framework'), 'None')), reference('deployC2').outputs.virtualNetworkId.value, 'Resource not deployed')]"
                }
            }
        }
    ],
    "outputs": {
    }
}
